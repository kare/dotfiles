#!/bin/bash
set -eu -o pipefail

function usage() {
	echo "Usage: git empty [-h] [-d]Â [directory]" 1>&2
	echo "	-h Show help" 1>&2
	echo "	-d Decorate .gitignore with common OS files" 1>&2
	echo "If no directory is given then current directory is used as working directory." 1>&2
}

while getopts "hd" arg; do
	case $arg in
	d) # Decorate .gitignore with common OS files
		deco_arg=1
		shift
	;;
	h|*) # Show help
		usage
		exit 1
	;;
	esac
done

if [ -n "${1-}" ]; then
	dir=${1}
else
	dir=.
fi
if [ ! -d "$dir" ]; then
	mkdir -p "$dir"
fi

cd "$dir" || exit 3
if [ -d .git ]; then
	echo "git empty: existing .git directory found. aborting." 1>&2
	exit 2
fi
git init .
if [ -e .gitignore ]; then
	tmpignore=$(mktemp)
	mv .gitignore "$tmpignore"
fi

git config user.email kare.nuorteva@me.com
git config user.name "Kare Nuorteva"
git config color.ui true

touch .gitignore
git add .gitignore
git commit -m "chore: Add empty .gitignore"
if [ -n "${tmpignore-}" ] && [ -e "$tmpignore" ]; then
	mv "$tmpignore" .gitignore
fi

if [[ -n ${deco_arg-} ]]; then
	if [[ $(git diff-index --quiet HEAD .gitignore) ]]; then
		git stash
		deco_stash=1
	fi
	cat << __DECORATION__ >> .gitignore
.DS_Store
/.idea
/.vscode
*.diff
*.patch
*.tar.gz
*.tgz
*.zip
__DECORATION__
fi
git add .gitignore
git commit -m "chore: Add common files to .gitignore"
if [ -n "${deco_stash-}" ] && [ -e "$deco_stash" ]; then
	git stash pop
fi

